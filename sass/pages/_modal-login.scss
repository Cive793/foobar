@use "../base/colors";

#modal-login {
  background-color: colors.$font-secondary;
  position: absolute;
  top: 0;
  right: 0;
  padding-top: 2rem;
  padding-bottom: 3rem;
  padding-left: 2rem;
  padding-right: 2rem;
  height: fit-content;
  width: 25rem;
  z-index: 99999;
  background: rgb(27, 11, 82);
  background: linear-gradient(0deg, rgba(27, 11, 82, 1) 0%, rgba(13, 6, 39, 1) 35%);
  #close-modal {
    background: url("assets/icons/close.svg") no-repeat;
    background-size: cover;
    width: 2rem;
    height: 2rem;
    border: none;
    padding: 0;
    --glow-color: none;
    float: right;
    margin: 0;
    cursor: pointer;

    /* --glow-color: none;
    --glow-spread-color: none;
    --enhanced-glow-color: none;
    --btn-color: colors.$contrast-primary;
    background-color: colors.$tertiary;
    font-size: 1rem;
    width: 2rem;
    height: 2rem;
    margin-top: 0;
    border-radius: 1rem;
    padding: 0;
    float: right;
    cursor: pointer;
    &:hover {
      background-color: colors.$not-validated;
    } */
  }

  h1 {
    font-size: 2.5rem;
  }

  form {
    padding-top: 40px;
    display: flex;
    flex-direction: column;
    width: 100%;
    align-items: center;

    h3,
    p {
      text-align: center;
      margin-bottom: 2rem;
      margin-top: 2rem;
    }

    .button-container {
      display: flex;
      flex-direction: column;
      align-items: center;
      margin-top: 3rem;
    }

    button {
      width: 6rem;
      font-size: 0.9rem;
      cursor: pointer;
    }

    span {
      font-size: 1rem;
    }

    .payment-container {
      display: flex;
      gap: 2rem;
    }

    .input-container {
      position: relative;
      margin-bottom: 0.5rem;
      //width: 79%;

      #phone {
        width: 10rem;
      }

      .cc-number-input {
        width: 15.4rem;
        padding-left: 0;
        font-size: 1rem;
        padding-left: 1rem;
      }

      .cc-expiry-input {
        width: 7rem;
        padding-left: 0;
        text-align: center;
        font-size: 1rem;
      }
      .cc-cvc-input {
        width: 7rem;
        padding-left: 0;
        text-align: center;
        font-size: 1rem;
      }

      input {
        height: 1.7rem;
        border-radius: 5px;
        letter-spacing: 0.5px;
        padding-left: 5px;
        width: 285px;
      }

      label.placeholder {
        color: colors.$secondary;
        top: 0.3rem;
        left: 0.5rem;
        pointer-events: none;
        position: absolute;
        transform-origin: 0 50%;
        transition: transform 200ms, color 200ms;
      }

      input:focus ~ .cut,
      input:not(:placeholder-shown) ~ .cut {
        transform: translateY(0.2rem);
      }

      input:focus ~ label.placeholder,
      input:not(:placeholder-shown) ~ label.placeholder {
        transform: translateY(-1.7rem) translateX(0.2rem) scale(0.9);
      }

      input:not(:placeholder-shown) ~ label.placeholder {
        background-color: colors.$secondary;
        color: colors.$font-primary;
        padding: 1px 5px;
        border-radius: 5px;
        margin-top: 5px;
        margin-left: -2px;
      }

      input:focus ~ label.placeholder {
        background-color: colors.$secondary;
        color: colors.$validated;
        padding: 1px 5px;
        border-radius: 5px;
        margin-top: 5px;
        margin-left: -2px;
      }
    }

    input[type="text"],
    input[type="email"],
    input[type="tel"] {
      &:invalid:not(:placeholder-shown) {
        & ~ .requirements {
          visibility: visible;
        }
      }
    }

    .requirements {
      visibility: hidden;
      color: colors.$not-validated;
      font-size: 0.7rem;
      text-align: right;
    }
  }

  .payment-container {
    width: 56%;
  }
}

@media only screen and (max-width: 800px) {
  #modal-login {
    padding-top: 2rem;
    padding-bottom: 3rem;
    padding-left: 2rem;
    padding-right: 2rem;
    width: 100%;
  }

  #modal-login {
    box-sizing: border-box;
  }

  #modal-login .form {
    box-sizing: initial !important;
  }

  #modal-login #log-guest {
    box-sizing: initial !important;
  }
}
